{"version":3,"sources":["hooks/useSearch/index.js","context/ZonesContext.js","components/SearchBar/styles.js","components/SearchBar/index.js","assets/dots.jpg","components/Box/styles.js","components/Box/index.js","hooks/useDate/index.js","components/Boxes/styles.js","components/Boxes/index.js","components/Toggler/styles.js","components/Toggler/index.js","components/Error/styles.js","components/Error/index.js","theme/index.js","App.js","index.js"],"names":["useSearch","useState","query","setQuery","options","setOptions","newtorkError","setNewtorkError","suggestions","setSuggestions","fetchZones","a","axios","response","data","setTimeout","useEffect","zones","filter","zone","toLowerCase","includes","ZonesContext","createContext","ZonesContextProvider","children","timezonesInLocalStorage","window","localStorage","getItem","initialState","JSON","parse","setZones","setItem","stringify","Provider","value","addZone","newZone","find","concat","removeZone","zoneToRemove","Container","styled","div","Bar","input","theme","text","background","Suggestions","Suggestion","p","SearchBar","useContext","filteredSuggestions","suggestion","slice","placeholder","onChange","e","target","length","map","index","onClick","fadeIn","keyframes","dots","DeleteBox","Content","Zone","h4","Date","Time","Box","remove","timezone","time","setTime","date","setDate","setInterval","currentTime","updatedTime","toLocaleTimeString","timeZone","updatedDate","toLocaleDateString","useDate","Boxes","Button","button","toggleBorder","Toggler","toggleTheme","Message","Error","lightTheme","body","darkTheme","App","setTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70c55831.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useSearch = () => {\r\n  // What's entered in the SearchBar\r\n  const [query, setQuery] = useState(\"\");\r\n  // The fetched options list\r\n  const [options, setOptions] = useState(null);\r\n  // The api used for the exercise is pretty prono to errors, so i wanna give the user a clue in case it doesn't respond well\r\n  const [newtorkError, setNewtorkError] = useState(false);\r\n  // Suggestions based on the query\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const fetchZones = async () => {\r\n    try {\r\n      const response = await axios(\"http://worldtimeapi.org/api/timezone\");\r\n      setOptions(response.data);\r\n\r\n      // When there's a network error from the api, usually the call shows as pending for a while before crashing, so here that's being catched and treated as what it'll be: a network error.\r\n      setTimeout(() => {\r\n        !options && !!query && setNewtorkError(true);\r\n      }, 2500);\r\n    } catch (e) {\r\n      setNewtorkError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetches the list of zones when mounting the component\r\n    fetchZones();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // If there's a query, it filters among the options list to throw suggestions\r\n    if (query && options) {\r\n      const zones = options.filter((zone) =>\r\n        zone.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n\r\n      setSuggestions(zones);\r\n    } else setSuggestions([]);\r\n  }, [query, options]);\r\n\r\n  return {\r\n    query,\r\n    setQuery,\r\n    suggestions,\r\n    setSuggestions,\r\n    newtorkError,\r\n  };\r\n};\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ZonesContext = createContext();\r\n\r\nexport const ZonesContextProvider = ({ children }) => {\r\n  // If there's data in local storage here i bring it, if not just initializes zones to an empty array\r\n  const timezonesInLocalStorage = window.localStorage.getItem(\"timezones\");\r\n  const initialState = timezonesInLocalStorage\r\n    ? JSON.parse(timezonesInLocalStorage)\r\n    : [];\r\n\r\n  const [zones, setZones] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"timezones\", JSON.stringify(zones));\r\n  }, [zones]);\r\n\r\n  const addZone = (newZone) => {\r\n    // Avoid storing a repeated zone\r\n    if (!zones.find((zone) => zone === newZone)) {\r\n      setZones((zones) => zones.concat(newZone));\r\n    }\r\n  };\r\n\r\n  const removeZone = (zoneToRemove) => {\r\n    setZones((zones) => zones.filter((zone) => zone !== zoneToRemove));\r\n  };\r\n\r\n  return (\r\n    <ZonesContext.Provider value={{ zones, addZone, removeZone }}>\r\n      {children}\r\n    </ZonesContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  & input {\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.input`\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  border: 1px dotted grey;\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Suggestions = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1em;\r\n  position: absolute;\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 1em;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Suggestion = styled.p`\r\n  cursor: pointer;\r\n  margin: 0;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { useSearch } from \"src/hooks\";\r\nimport { ZonesContext } from \"src/context\";\r\nimport { Container, Bar, Suggestions, Suggestion } from \"./styles\";\r\n\r\nexport const SearchBar = () => {\r\n  const { query, setQuery, suggestions, setSuggestions } = useSearch();\r\n\r\n  const { addZone, zones } = useContext(ZonesContext);\r\n\r\n  // I show only the first 25 suggestions\r\n  const filteredSuggestions = suggestions\r\n    .filter((suggestion) => !zones.includes(suggestion))\r\n    .slice(0, 20);\r\n\r\n  return (\r\n    <Container>\r\n      <Bar\r\n        placeholder=\"Enter a timezone\"\r\n        options={suggestions}\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {filteredSuggestions.length > 0 && (\r\n        <Suggestions>\r\n          {filteredSuggestions.map((suggestion, index) => (\r\n            <Suggestion\r\n              key={index}\r\n              onClick={() => {\r\n                // Add a box with for selected suggestion, reset query and suggestions\r\n                addZone(suggestion);\r\n                setQuery(\"\");\r\n                setSuggestions([]);\r\n              }}\r\n            >\r\n              {suggestion}\r\n            </Suggestion>\r\n          ))}\r\n        </Suggestions>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/dots.6ad19bb1.jpg\";","import styled, { keyframes } from \"styled-components\";\r\nimport dots from \"src/assets/dots.jpg\";\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  background-image: url(${dots});\r\n  border-radius: 10px;\r\n  border: 1.5px solid darkgrey;\r\n  animation: ${fadeIn} 0.6s ease 1;\r\n  transition: 0.6s;\r\n\r\n  @media all and (min-width: 620px) {\r\n    min-width: 200px;\r\n    width: 30%;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\nexport const DeleteBox = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-left: auto;\r\n  padding: 0.7em;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div``;\r\n\r\nexport const Zone = styled.h4``;\r\n\r\nexport const Date = styled.p``;\r\n\r\nexport const Time = styled.p``;\r\n","import React from \"react\";\r\nimport Loading from \"react-simple-loading\";\r\nimport { useDate } from \"src/hooks\";\r\nimport { Container, DeleteBox, Content, Zone, Date, Time } from \"./styles\";\r\n\r\nexport const Box = ({ zone, remove }) => {\r\n  const { time, date } = useDate(zone);\r\n\r\n  return (\r\n    <Container>\r\n      <DeleteBox onClick={remove}>X</DeleteBox>\r\n      <Content>\r\n        <Zone>{zone}</Zone>\r\n        {date && time ? (\r\n          <>\r\n            <Date>{date}</Date>\r\n            <Time>{time}</Time>\r\n          </>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDate = (timezone) => {\r\n  const [time, setTime] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Updates time every 1 second\r\n    if (timezone)\r\n      setInterval(() => {\r\n        const currentTime = new Date(),\r\n          updatedTime = currentTime.toLocaleTimeString(\"en-US\", {\r\n            timeZone: timezone,\r\n          }),\r\n          updatedDate = currentTime.toLocaleDateString(\"en-US\", {\r\n            timeZone: timezone,\r\n          });\r\n\r\n        setTime(updatedTime);\r\n        setDate(updatedDate);\r\n      }, 1000);\r\n  }, [timezone]);\r\n\r\n  return { time, date };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2em 1em;\r\n  gap: 3em;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  transition: 0.6s;\r\n\r\n  @media all and (min-width: 620px) {\r\n    flex-flow: row wrap;\r\n    padding: 3em 1em;\r\n    gap: 1em;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Box } from \"src/components\";\r\nimport { ZonesContext } from \"src/context\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport const Boxes = () => {\r\n  const { zones, removeZone } = useContext(ZonesContext);\r\n\r\n  return (\r\n    <Container>\r\n      {zones &&\r\n        zones.map((zone) => {\r\n          return <Box key={zone} zone={zone} remove={() => removeZone(zone)} />;\r\n        })}\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: flex-end;\r\n  margin: 1em 0;\r\n  width: 7em;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  background: ${({ theme }) => theme.background};\r\n  border: 1px solid ${({ theme }) => theme.toggleBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  padding: 0.6rem;\r\n  width: 150px;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Button } from \"./styles\";\r\n\r\nexport const Toggler = ({ toggleTheme }) => (\r\n  <Container>\r\n    <Button onClick={toggleTheme}>Switch Theme</Button>\r\n  </Container>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  background-color: red;\r\n  height: 1.2em;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  transition: 2s;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-size: 0.8em;\r\n  margin: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Message } from \"./styles\";\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <Container>\r\n      <Message>There was a network error</Message>\r\n    </Container>\r\n  );\r\n};\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"lightGrey\",\r\n  background: \"#f1f1f1\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FFF\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#363537\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { SearchBar, Boxes, Toggler, Error } from \"src/components\";\r\nimport { ZonesContextProvider } from \"src/context\";\r\nimport { lightTheme, darkTheme } from \"src/theme\";\r\nimport { useSearch } from \"src/hooks\";\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"dark\");\r\n\r\n  const { newtorkError } = useSearch();\r\n\r\n  const themeToggler = () =>\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <ZonesContextProvider>\r\n        <Container>\r\n          {newtorkError && <Error />}\r\n          <Toggler toggleTheme={themeToggler} />\r\n          <SearchBar />\r\n          <Boxes />\r\n        </Container>\r\n      </ZonesContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.background};\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n  transition: 0.6s;\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}