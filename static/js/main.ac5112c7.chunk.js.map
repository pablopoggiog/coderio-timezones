{"version":3,"sources":["context/ZonesContext.js","components/SearchBar/styles.js","components/SearchBar/index.js","hooks/useSearch/index.js","assets/dots.jpg","components/Box/styles.js","components/Box/index.js","components/Boxes/styles.js","components/Boxes/index.js","components/Toggler/styles.js","components/Toggler/index.js","theme/index.js","App.js","index.js"],"names":["ZonesContext","createContext","ZonesContextProvider","children","useState","zones","setZones","useEffect","length","timezones","map","zone","timezone","window","localStorage","setItem","JSON","stringify","interval","setInterval","newZones","time","Date","utc_datetime","setSeconds","getSeconds","clearInterval","Provider","value","addZone","newZone","find","concat","removeZone","zoneToRemove","filter","Container","styled","div","Bar","input","theme","text","background","Suggestions","Suggestion","p","SearchBar","query","setQuery","options","setOptions","parse","getItem","suggestions","setSuggestions","useContext","fetchZones","a","axios","response","data","console","log","fetchZone","useCallback","toLowerCase","includes","useSearch","placeholder","onChange","e","target","suggestion","index","onClick","fadeIn","keyframes","dots","DeleteBox","Content","Zone","h4","Time","Box","date","remove","Boxes","toLocaleDateString","toLocaleTimeString","timeZone","Button","button","toggleBorder","Toggler","toggleTheme","lightTheme","body","darkTheme","App","setTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac5112c7.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ZonesContext = createContext();\r\n\r\nexport const ZonesContextProvider = ({ children }) => {\r\n  const [zones, setZones] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Avoid overriding zones when it's initialized to an empty array, waiting for localStorage\r\n    if (zones.length > 0) {\r\n      const timezones = zones.map((zone) => zone.timezone);\r\n      window.localStorage.setItem(\"timezones\", JSON.stringify(timezones));\r\n    }\r\n  }, [zones]);\r\n\r\n  const addZone = (newZone) => {\r\n    // Avoid storing a repeated zone\r\n    if (!zones.find((zone) => zone.timezone === newZone.timezone)) {\r\n      setZones((zones) => zones.concat(newZone));\r\n    }\r\n  };\r\n\r\n  const removeZone = (zoneToRemove) => {\r\n    setZones((zones) => zones.filter((zone) => zone.timezone !== zoneToRemove));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the time every 5 seconds\r\n    const interval = setInterval(() => {\r\n      if (zones.length > 0) {\r\n        const newZones = zones.map((zone) => {\r\n          const time = new Date(zone.utc_datetime);\r\n\r\n          return {\r\n            ...zone,\r\n            utc_datetime: Date(time.setSeconds(time.getSeconds() + 5)),\r\n          };\r\n        });\r\n\r\n        setZones(newZones);\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [zones]);\r\n\r\n  return (\r\n    <ZonesContext.Provider value={{ zones, addZone, removeZone }}>\r\n      {children}\r\n    </ZonesContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  & input {\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.input`\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  border: 1px dotted grey;\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Suggestions = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1em;\r\n  position: absolute;\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 1em;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Suggestion = styled.p`\r\n  cursor: pointer;\r\n  margin: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { useSearch } from \"src/hooks\";\r\nimport { Container, Bar, Suggestions, Suggestion } from \"./styles\";\r\n\r\nexport const SearchBar = () => {\r\n  const {\r\n    query,\r\n    setQuery,\r\n    suggestions,\r\n    setSuggestions,\r\n    fetchZone,\r\n  } = useSearch();\r\n\r\n  return (\r\n    <Container>\r\n      <Bar\r\n        placeholder=\"Enter a timezone\"\r\n        options={suggestions}\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {suggestions.length > 0 && (\r\n        <Suggestions>\r\n          {suggestions.map((suggestion, index) => (\r\n            <Suggestion\r\n              key={index}\r\n              onClick={() => {\r\n                // Fetches the selected suggestion, reset query and suggestions\r\n                fetchZone(suggestion);\r\n                setQuery(\"\");\r\n                setSuggestions([]);\r\n              }}\r\n            >\r\n              {suggestion}\r\n            </Suggestion>\r\n          ))}\r\n        </Suggestions>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ZonesContext } from \"src/context\";\r\n\r\nexport const useSearch = () => {\r\n  // What's entered in the SearchBar\r\n  const [query, setQuery] = useState(\"\");\r\n  // The fetched options list\r\n  const [options, setOptions] = useState([]);\r\n  // Timezones in localStorage\r\n  const [timezones, _] = useState(\r\n    JSON.parse(window.localStorage.getItem(\"timezones\"))\r\n  );\r\n  // Suggestions based on the query\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const { addZone } = useContext(ZonesContext);\r\n\r\n  const fetchZones = async () => {\r\n    try {\r\n      const response = await axios(\"http://worldtimeapi.org/api/timezone\");\r\n      setOptions(response.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const fetchZone = useCallback(\r\n    async (zone) => {\r\n      try {\r\n        const response = await axios(\r\n          `http://worldtimeapi.org/api/timezone/${zone}`\r\n        );\r\n        addZone(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    [addZone]\r\n  );\r\n\r\n  useEffect(() => {\r\n    // If there are timezones in localStorage (only the names), it fetches its info\r\n    if (timezones) {\r\n      timezones.map((timezone) => fetchZone(timezone));\r\n    }\r\n  }, [timezones, fetchZone]);\r\n\r\n  useEffect(() => {\r\n    // Fetches the list of zones when mounting the component\r\n    fetchZones();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // If there's a query, it filters among the options list to throw suggestions\r\n    if (query) {\r\n      const zones = options.filter((zone) =>\r\n        zone.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      setSuggestions(zones);\r\n    } else setSuggestions([]);\r\n  }, [query, options]);\r\n\r\n  return { query, setQuery, suggestions, setSuggestions, fetchZone };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/dots.6ad19bb1.jpg\";","import styled, { keyframes } from \"styled-components\";\r\nimport dots from \"src/assets/dots.jpg\";\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  background-image: url(${dots});\r\n  border-radius: 10px;\r\n  border: 1px dotted darkgrey;\r\n  animation: ${fadeIn} 0.6s ease 1;\r\n  transition: 0.6s;\r\n\r\n  @media all and (min-width: 620px) {\r\n    min-width: 200px;\r\n    width: 30%;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\nexport const DeleteBox = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-left: auto;\r\n  padding: 0.7em;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div``;\r\n\r\nexport const Zone = styled.h4``;\r\n\r\nexport const Date = styled.p``;\r\n\r\nexport const Time = styled.p``;\r\n","import React from \"react\";\r\nimport { Container, DeleteBox, Content, Zone, Date, Time } from \"./styles\";\r\n\r\nexport const Box = ({ zone, date, time, remove }) => {\r\n  return (\r\n    <Container>\r\n      <DeleteBox onClick={remove}>X</DeleteBox>\r\n      <Content>\r\n        <Zone>{zone}</Zone>\r\n        <Date>{date}</Date>\r\n        <Time>{time}</Time>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2em 1em;\r\n  gap: 3em;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  transition: 0.6s;\r\n\r\n  @media all and (min-width: 620px) {\r\n    flex-flow: row wrap;\r\n    padding: 3em 1em;\r\n    gap: 1em;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Box } from \"src/components\";\r\nimport { ZonesContext } from \"src/context\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport const Boxes = () => {\r\n  const { zones, removeZone } = useContext(ZonesContext);\r\n\r\n  return (\r\n    <Container>\r\n      {zones &&\r\n        zones.map(({ timezone, utc_datetime }) => {\r\n          // Formats the date and time\r\n          const date = new Date(utc_datetime).toLocaleDateString();\r\n          const time = new Date(utc_datetime).toLocaleTimeString(\"en-US\", {\r\n            timeZone: timezone,\r\n          });\r\n\r\n          return (\r\n            <Box\r\n              key={timezone + time}\r\n              zone={timezone}\r\n              date={date}\r\n              time={time}\r\n              remove={() => removeZone(timezone)}\r\n            />\r\n          );\r\n        })}\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: flex-end;\r\n  margin: 1em 0;\r\n  width: 7em;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  background: ${({ theme }) => theme.background};\r\n  border: 1px solid ${({ theme }) => theme.toggleBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  padding: 0.6rem;\r\n  width: 150px;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Button } from \"./styles\";\r\n\r\nexport const Toggler = ({ toggleTheme }) => (\r\n  <Container>\r\n    <Button onClick={toggleTheme}>Switch Theme</Button>\r\n  </Container>\r\n);\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"lightGrey\",\r\n  background: \"#f1f1f1\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FFF\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#363537\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { SearchBar, Boxes, Toggler } from \"src/components\";\r\nimport { ZonesContextProvider } from \"src/context\";\r\nimport { lightTheme, darkTheme } from \"src/theme\";\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"dark\");\r\n\r\n  const themeToggler = () =>\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <ZonesContextProvider>\r\n        <Container>\r\n          <Toggler toggleTheme={themeToggler} />\r\n          <SearchBar />\r\n          <Boxes />\r\n        </Container>\r\n      </ZonesContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.background};\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n  transition: 0.6s;\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}